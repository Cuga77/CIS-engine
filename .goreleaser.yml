# .goreleaser.yml
# Этот файл настраивает процесс сборки и публикации вашего CLI-инструмента.
# Документация: https://goreleaser.com/customization/
project_name: cis-cli

# Секция 'before' позволяет выполнять команды перед началом сборки.
# Здесь мы запускаем `go mod tidy` для очистки зависимостей.
before:
  hooks:
    - go mod tidy

# Секция 'builds' описывает, как компилировать ваше приложение.
builds:
  - # Мы собираем только один бинарный файл - наш CLI.
    id: cis-cli
    # Путь к главному файлу вашего CLI.
    main: ./cmd/cli/
    # Имя бинарного файла, которое будет сгенерировано.
    binary: cis-cli
    # Флаги, передаваемые компилятору Go для уменьшения размера бинарного файла.
    ldflags:
      - -s -w -X cis-engine/internal/cli.version={{.Version}}
    # Целевые платформы для кросс-компиляции.
    goos:
      - linux
      - windows
      - darwin # macOS
    goarch:
      - amd64
      - arm64
    # Игнорируем сборку для Windows ARM64, так как она менее распространена.
    ignore:
      - goos: windows
        goarch: arm64

# Секция 'archives' описывает, как упаковывать скомпилированные файлы.
archives:
  - # Уникальный идентификатор для этого архива.
    id: cis-cli
    # Собираем только бинарник с id 'cis-cli'.
    builds:
      - cis-cli
    # Шаблон для именования архивов.
    name_template: "{{.ProjectName}}_{{.Os}}_{{.Arch}}"
    # Файлы, которые нужно включить в архив помимо бинарника.
    files:
      - README.md

# Секция 'checksum' генерирует файл с контрольными суммами.
# Это позволяет пользователям проверить целостность загруженных файлов.
checksum:
  name_template: "checksums.txt"

# Секция 'snapshot' настраивает поведение для "снимков" - сборок не из тегов.
snapshot:
  name_template: "{{ .Tag }}-next"

# Секция 'changelog' автоматически генерирует список изменений для релиза.
changelog:
  sort: asc
  filters:
    # Исключаем коммиты, которые не должны попадать в список изменений.
    exclude:
      - "^docs:"
      - "^test:"
      - "Merge branch"
